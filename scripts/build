#!/bin/bash

normal=$(tput sgr0)
blue=$(tput setaf 4)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
builddir=$(dirname "$(readlink -f "$0")")
base=$(dirname $builddir)

info() {
    printf "${yellow}$1${normal}\n"
}

oops() {
    printf "${red}$1 ${normal}\n"
    [[ $# -eq 2 ]] && exit $2 || exit 1
}

while getopts ":pm:" opt; do
    case $opt in 
        m) modules="$modules $OPTARG"
            ;;
        p) publish=true
            ;;
        :) oops "Option -$OPTARG requires an argument." 99
            ;;
        ?) printf "${blue}invalid arg: -$OPTARG ${normal}\n"
            ;;
    esac
done

[[ "$modules" == "" ]] && oops "Nothing to build (specify with -m" 5


# ----------------------------------------------------------------------------
# API
# ----------------------------------------------------------------------------
api() {
    cd $base
    info "Starting npm update for API..."
    npm update || oops "The NPM update failed" 2
    info "Starting tests for API..."
    npm test || oops "API testing failed" 3
    info "Starting docker build for API..."
    docker build -f ${base}/Dockerfile -t stbgfc/tournament-api ${base}
    [[ $publish ]] && docker push stbgfc/tournament-api
}

# ----------------------------------------------------------------------------
# APP
# ----------------------------------------------------------------------------
app() {
    cd $base/web
    info "Starting lib updates for APP..."
    npm update || oops "NPM update failed" 2
    bower update || oops "Bower update failed" 2
    grunt clean karma || oops "Karma testing failed" 3
    info "Starting web build..."
    grunt build
    info "Starting docker build for APP..."
    docker build -f ${base}/web/Dockerfile -t stbgfc/tournament-app ${base}/web
    [[ $publish ]] && docker push stbgfc/tournament-app
}

for module in $modules; do $module; done
printf "${green}All done ${yellow}:)${normal}\n"

